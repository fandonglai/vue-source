{"version":3,"file":"vue.js","sources":["../src/util.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/gernerate.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n  return typeof val === \"function\";\n}\nexport function isObject(val) {\n  return typeof val == \"object\" && val != null;\n}\n","import { observe } from \".\";\n\nlet oldArrayMethods = Array.prototype;\n// 把原型上的方法拷贝一份\nexport let arrayMethods = Object.create(Array.prototype);\n// arrayMethods.__proto__ = Array.prototype  继承\nlet methods = [\"push\", \"shift\", \"unshift\", \"pop\", \"reverse\", \"sort\", \"splice\"];\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    //args是参数列表\n    console.log(\"数组发生变化\");\n    oldArrayMethods[method].call(this, ...args);\n    let inserted;\n    let obj = this.__ob__; //根据当前数组获取obersveArray方法\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        inserted = args; //就是新增的内容\n        break;\n      case \"splice\":\n        inserted = args.slice(2); //参数中的第三项及以后的是新增的内容 splice（0,2,1,1,1,1,1）\n      default:\n        break;\n    }\n    if (inserted) {\n      // 如果有新增的内容需要再次进行劫持\n      // 需要观测的是数组中的每一项\n      ob.observeArray(inserted);\n    }\n  };\n});\n","import { isObject } from \"../util\";\nimport { arrayMethods } from \"./array\";\n// 监测数据变化 类有类型 对象无类型\nclass Observer {\n  constructor(data) {\n    Object.defineProperty(data, \"__ob__\", {\n      value: this,\n      enumerable: false,\n    });\n    // data.__ob__ = this; //所有被劫持的属性都有__ob__\n    if (Array.isArray(data)) {\n      // 数据劫持的逻辑\n      //  对数组方法进行改写，切片变成\n      data.__proto__ = arrayMethods;\n      //   如果数组中的数据是对象类型，需要监控对象的变化\n      this.observeArray(data);\n    } else {\n      //对对象中的所有属性进行劫持\n      this.walk(data);\n    }\n  }\n  observeArray(data) {\n    data.forEach((item) => {\n      observe(item);\n    });\n  }\n  walk(data) {\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n// vue2会对对象进行遍历，将每个属性用defineProperty重新定义 性能差\nfunction defineReactive(data, key, value) {\n  // value有可能是对象\n  observe(value); //本身数据默认值是对象套对象，需要递归处理（性能差）\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newV) {\n      observe(newV); // 如果用户赋值一个新对象，需要将这个对象进行劫持\n      value = newV;\n    },\n  });\n}\nexport function observe(data) {\n  //   如果是对象 才观测\n  if (!isObject(data)) {\n    return;\n  }\n  //   默认data最外层必须是对象\n  return new Observer(data);\n}\n","import { isFunction } from \"./util\";\nimport { observe } from \"./observe/index\";\n// 状态初始化\nexport function initState(vm) {\n  //状态的初始化\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n}\n// 代理 用户去vm上取值时 相当于vm._data上取值\nfunction proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key];\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    },\n  });\n}\nfunction initData(vm) {\n  let data = vm.$options.data;\n  //   Vue2中会将data中的数据 进行数据劫持 Object.defineProperty\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\n  for (let key in data) {\n    //vm.name = vm._data.name\n    proxy(vm, \"_data\", key);\n  }\n  observe(data);\n}\n","// ast语法树 是用对象来描述js语法\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名  div\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //用来获取标签名 match后的索引为1的\n\n// let r = \"<xxxx></xxxx>\".match(new RegExp(qnameCapture));\n// console.log(r);\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //匹配开始标签的\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //匹配闭合标签\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //属性 a=b a=\"b\" a='b'\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst startTagClose = /^\\s*(\\/?)>/; //结尾标签\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{{name}}\n\n// html字符串解析成dom树 <div id=\"app\">123123{{name}}</div>\n\n// 将解析后的结果 组装成一个树结构 栈\n\nfunction createAstElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: 1, //标签1 文本3\n    children: [],\n    parent: null,\n    attrs,\n  };\n}\nlet root = null;\nlet stack = []; //栈\n// 处理开始标签\nfunction start(tagName, attributes) {\n  let element = createAstElement(tagName, attributes);\n  let parent = stack[stack.length - 1];\n  if (!root) {\n    root = element;\n  }\n  // 每遇到一个开始标签 就放到栈中\n  element.parent = parent; //当放入栈中时 记录父亲是谁\n  if (parent) {\n    parent.children.push(element);\n  }\n  stack.push(element);\n}\n// 处理结束标签\nfunction end(tagName) {\n  let last = stack.pop(); //当遇到标签结束的时候，把最后一项从栈中删除\n  if (last.tag !== tagName) {\n    throw new Error(\"标签有误\");\n  }\n}\n// 处理标签中的文本\nfunction chars(text) {\n  text = text.replace(/\\s/g, \"\"); //把文本中的空格删除\n  let parent = stack[stack.length - 1]; //当前文本的parent为栈中的最后一项\n  if (text) {\n    // 把文本放在父元素下\n    parent.children.push({\n      type: 3,\n      text,\n    });\n  }\n}\n\nexport function parserHTML(html) {\n  function advance(len) {\n    html = html.substring(len);\n  }\n  function parseStartTag() {\n    const start = html.match(startTagOpen);\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n      };\n      advance(start[0].length);\n      //   console.log(html); //id=\"app\">{{name}}</div>\n      //   循环标签中的属性\n      let end;\n      //   如果没有遇到标签结尾 就不停的循环解析\n      let attr;\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5],\n        });\n        advance(attr[0].length);\n      }\n      //   console.log(match);\n      if (end) {\n        advance(end.length);\n      }\n      return match;\n    }\n    return false; //不是开始标签\n  }\n  function parseEndTag() {}\n  while (html) {\n    //看要解析的内容是否存在，如果存在就不停的解析\n    let textEnd = html.indexOf(\"<\"); //当前解析的开头\n    if (textEnd == 0) {\n      const startTagMatch = parseStartTag(html); //解析开始标签\n      if (startTagMatch) {\n        // 处理当前的标签名和属性\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n      const endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        end(endTagMatch[1]);\n        advance(endTagMatch[0].length);\n        continue;\n      }\n      // break;\n    }\n    let text; //继续下边的文本 123123</div>\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      chars(text); //处理文本\n      advance(text.length); //如果文本有值把文本的内容去掉\n      // break;\n    }\n  }\n  return root;\n}\n","// html字符串 转为字符串\n// 拼接attrs属性\nfunction genProps(attrs) {\n  let str = \"\";\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === \"style\") {\n      // style:\"width: 100px; color: red\"\n      let styleObj = {};\n      attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function () {\n        styleObj[arguments[1]] = arguments[2];\n      });\n      attr.value = styleObj;\n    }\n    // JSON.stringify 为了有双引号\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`;\n}\nfunction gen(el) {\n  console.log(el, 11);\n  if (el.type == 1) {\n    return generate(el);\n  } else {\n    let text = el.text;\n    return `_v('${text}')`;\n  }\n}\nfunction genChildren(el) {\n  let children = el.children;\n  if (children) {\n    return children\n      .map((c) => {\n        gen(c);\n      })\n      .join(\",\");\n  }\n  return false;\n}\nexport function generate(el) {\n  console.log(\"---\", el);\n\n  //   遍历树 将树生成字符串\n  //   字符串拼接\n  let children = genChildren(el);\n  let code = `_c('${el.tag}',${\n    el.attrs.length ? genProps(el.attrs) : \"undefined\"\n  }${children ? `,${children}` : \"\"})`;\n\n  console.log(code, \"===\");\n}\n","import { parserHTML } from \"./parser\";\nimport { generate } from \"./gernerate\";\n// 将html解析成ast树 对应的脚本来触发\nexport function compileTofunction(template) {\n  let root = parserHTML(template);\n\n  // 生成代码---------\n  let code = generate(root);\n\n  // render(){\n  //   return _c('div',{id:'app',a:1},'hello')\n  // }\n  // {tag:'div',data:{id:'app',a:1},children:[{text:'hello'}]}\n\n  // html=》ast=》render函数是虚拟（增加一些额外的属性）=》生成真是dom\n  // 把ast树转为render\n}\n","import { initState } from \"./state\";\nimport { compileTofunction } from \"./compiler/index\";\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n    // 对数据进行初始化\n    initState(vm);\n\n    if (vm.$options.el) {\n      // 将数据挂载到这个模版上\n      vm.$mount(vm.$options.el);\n    }\n  };\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n    // console.log(el);\n    // 把模板转换成对应的渲染函数=》虚拟dom vnode =》diff算法\n    // 更新虚拟节点=》产生真是节点，更新\n    if (!options.render) {\n      //没有render用template\n      let template = options.template;\n      if (!template && el) {\n        //用户也没有传递template\n        template = el.outerHTML;\n        let render = compileTofunction(template);\n        options.render = render;\n      }\n    }\n    // options.render 就是渲染函数\n  };\n}\n","import { initMixin } from \"./init\";\nfunction Vue(options) {\n  // options 用户传入的数据\n  this._init(options); //初始化操作，组件\n}\n// 扩展原型\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":[],"mappings":"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"}